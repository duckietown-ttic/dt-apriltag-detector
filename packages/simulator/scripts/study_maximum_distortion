#!/usr/bin/env python3

import os
import json
import time
from pathlib import Path

import yaml
import glob
import pickle
import logging
import numpy as np
import imageio

import matplotlib.pyplot as plt

logging.basicConfig()
logger = logging.getLogger('study_maximum_distortion')
logger.setLevel(logging.DEBUG)

DATA_DIR = os.path.join(os.path.abspath(os.path.dirname(__file__)), '..', '..', 'data')
WEBCRAWL_DATA_DIR = os.path.join(DATA_DIR, 'webcrawl_data')
WEBCRAWL_STATS_DATA_DIR = os.path.join(WEBCRAWL_DATA_DIR, 'stats')
DEBUG = False

MAXD_RANGE = 1000

CAMERAS = glob.glob(os.path.join(WEBCRAWL_STATS_DATA_DIR, f'camera_*.json'))


tot_cameras = no_cameras = len(CAMERAS)
valid_cameras = {}
camera_stats = {}

# load cameras stats
for camera_file in CAMERAS:
    camera_name = Path(camera_file).stem
    with open(camera_file, 'r') as fin:
        camera_stats[camera_name] = json.load(fin)
print(f'{len(CAMERAS)} cameras loaded.')

# filter cameras (invalid disto coeffs)
camera_stats = {
    k: c for k, c in camera_stats.items()
    if c['max_distortion'] < MAXD_RANGE
}
no_cameras = len(camera_stats)
print(f'{tot_cameras - no_cameras} cameras had a max distortion out of range [> 999]')
tot_cameras = no_cameras

maxD = np.array([c['max_distortion'] for c in camera_stats.values()])
print(f'max maxD: {maxD.max()}')
print(f'min maxD: {maxD.min()}')
print(f'mean maxD: {maxD.mean()}')
print(f'std maxD: {maxD.std()}')

plt.hist(maxD, bins=100)
plt.show()



